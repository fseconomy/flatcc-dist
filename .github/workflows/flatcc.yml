name: Build and Release FlatCC

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    name: Build FlatCC
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
#        os: [ubuntu-latest, macos-latest, windows-latest]
        os: [ubuntu-latest]
        include:
          - os: ubuntu-latest
            zip_name: flatcc-linux.zip
            build_script: |
              cmake -DCMAKE_BUILD_TYPE=Release -B build
              cmake --build build --parallel
              cp bin/flatcc ../bin/flatcc
              cp lib/libflatcc.a ../lib/libflatcc.a
              cp lib/libflatccrt.a ../lib/libflatccrt.a
#          - os: macos-latest
#            zip_name: flatcc-macos.zip
#            build_script: |
#              cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_OSX_ARCHITECTURES="arm64;x86_64" -B build
#              cmake --build build --parallel
#              cp bin/flatcc ../bin/flatcc
#              cp lib/libflatcc.a ../lib/libflatcc.a
#              cp lib/libflatccrt.a ../lib/libflatccrt.a
#          - os: windows-latest
#            zip_name: flatcc-windows.zip
#            build_script: |
#              cmake -DCMAKE_BUILD_TYPE=Release -G "MinGW Makefiles" -B build
#              cmake --build build --parallel
#              move bin\\flatcc.exe ..\\bin\\flatcc.exe
#              move lib\\libflatcc.a ..\\lib\\libflatcc.a
#              move lib\\libflatccrt.a ..\\lib\\libflatccrt.a

    steps:
      # Check out the workflow repository
      - name: Checkout Workflow Repo
        uses: actions/checkout@v4

      # Clone the FlatCC repository
      - name: Clone FlatCC Repository
        run: |
          git clone https://github.com/dvidelabs/flatcc.git
          cd flatcc

      # Prepare directories and copy includes
      - name: Prepare Directories
        run: |
          mkdir -p bin lib include
          cp -r flatcc/include/flatcc include/
          cp flatcc/LICENSE .
        if: runner.os != 'Windows'

      - name: Prepare Directories (Windows)
        run: |
          mkdir bin
          mkdir lib
          mkdir include
          Copy-Item -Recurse flatcc\\include\\flatcc include
          Copy-Item flatcc\\LICENSE .
        if: runner.os == 'Windows'

      # Install dependencies
      - name: Install Dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake
      - name: Install Dependencies (macOS)
        if: runner.os == 'macOS'
        run: |
          brew install cmake
      - name: Install Dependencies (Windows)
        if: runner.os == 'Windows'
        run: |
          choco install -y mingw
          choco install -y cmake

      # Build FlatCC
      - name: Build FlatCC
        run: |
          cd flatcc
          ${{ matrix.build_script }}

      # Upload Artifacts for Release
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.zip_name }}
          path: |
            bin/
            lib/
            include/
            LICENSE

  release:
    name: Create Release and Upload Binaries
    needs: build
    runs-on: ubuntu-latest
    steps:
      # Check out the workflow repository
      - name: Checkout Workflow Repo
        uses: actions/checkout@v4

      # Create directory structure
      - name: Prepare Directories
        run: |
          mkdir -p ~/assets

      # Download Artifacts from All Jobs
      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          path: ~/assets
      
      # Create GitHub Release
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ~/assets/flatcc-linux.zip
#            assets/flatcc-macos.zip
#            assets/flatcc-windows.zip
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
